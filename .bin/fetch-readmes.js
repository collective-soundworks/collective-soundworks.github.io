import fs from 'node:fs';
import path from 'node:path';

import fetch from 'node-fetch';

const repos = {
  'Helpers': { name: 'soundworks-helpers', branch: 'main' },
  'Platform Init': { name: 'soundworks-plugin-platform-init', branch: 'main' },
  'Sync': { name: 'soundworks-plugin-sync', branch: 'main' },
  'Filesystem': { name: 'soundworks-plugin-filesystem', branch: 'main' },
  'Scripting': { name: 'soundworks-plugin-scripting', branch: 'main' },
  'Checkin': { name: 'soundworks-plugin-checkin', branch: 'main' },
  'Position': { name: 'soundworks-plugin-position', branch: 'main' },
  'Logger': { name: 'soundworks-plugin-logger', branch: 'main' },
};

const sortedKeys = Object.keys(repos);
const menuEntries = [];

for (let name of sortedKeys) {
  const repo = repos[name];
  const url = `https://raw.githubusercontent.com/collective-soundworks/${repo.name}/${repo.branch}/README.md`;

  let res;
  // just return if we don't have internet
  try {
    res = await fetch(url);
  } catch(err) {
    console.log(err.message);
    console.log('> Aborting README downloads');
    process.exit(0);
  }

  const readme = await res.text();

  if (repo.name.includes('-plugin-')) {
    const filename = repo.name.replace('soundworks-plugin-', '');
    const pathname = path.join('plugins', `${filename}.md`);

    fs.mkdirSync(path.dirname(pathname), { recursive: true });
    fs.writeFileSync(pathname, readme);

    menuEntries.push({
      text: `Plugin ${name}`,
      link: `/plugins/${filename}`,
    });
  } else {
    const filename = repo.name.replace('soundworks-', '');
    const pathname = path.join('tools', `${filename}.md`);

    fs.mkdirSync(path.dirname(pathname), { recursive: true });
    fs.writeFileSync(pathname, readme);

    menuEntries.push({
      text: `${name}`,
      link: `/tools/${filename}`,
    });
  }
}

const sidebarContent = `\
// file generated by .bin/download-plugins-readme.js
export default ${JSON.stringify(menuEntries, null, 2)};
`;

const sidebarPathname = path.join('.vitepress', 'sidebar-plugins.js');
fs.writeFileSync(sidebarPathname, sidebarContent);
