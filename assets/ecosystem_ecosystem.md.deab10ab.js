import{_ as e,c as s,o,a as n}from"./app.a4055ff3.js";const k=JSON.parse('{"title":"Ecosystem","description":"","frontmatter":{},"headers":[{"level":2,"title":"@soundworks/core","slug":"soundworks-core","link":"#soundworks-core","children":[]},{"level":2,"title":"@soundworks/plugin-audio-buffer-loader","slug":"soundworks-plugin-audio-buffer-loader","link":"#soundworks-plugin-audio-buffer-loader","children":[]},{"level":2,"title":"@soundworks/plugin-checkin","slug":"soundworks-plugin-checkin","link":"#soundworks-plugin-checkin","children":[]},{"level":2,"title":"@soundworks/plugin-filesystem","slug":"soundworks-plugin-filesystem","link":"#soundworks-plugin-filesystem","children":[]},{"level":2,"title":"@soundworks/plugin-logger","slug":"soundworks-plugin-logger","link":"#soundworks-plugin-logger","children":[]},{"level":2,"title":"@soundworks/plugin-platform","slug":"soundworks-plugin-platform","link":"#soundworks-plugin-platform","children":[]},{"level":2,"title":"@soundworks/plugin-position","slug":"soundworks-plugin-position","link":"#soundworks-plugin-position","children":[]},{"level":2,"title":"@soundworks/plugin-scripting","slug":"soundworks-plugin-scripting","link":"#soundworks-plugin-scripting","children":[]},{"level":2,"title":"@soundworks/plugin-sync","slug":"soundworks-plugin-sync","link":"#soundworks-plugin-sync","children":[]},{"level":2,"title":"@soundworks-template","slug":"soundworks-template","link":"#soundworks-template","children":[]},{"level":2,"title":"@soundworks/template-build","slug":"soundworks-template-build","link":"#soundworks-template-build","children":[]},{"level":2,"title":"@soundworks/template-helpers","slug":"soundworks-template-helpers","link":"#soundworks-template-helpers","children":[]}],"relativePath":"ecosystem/ecosystem.md"}'),r={name:"ecosystem/ecosystem.md"},a=n(`<h1 id="ecosystem" tabindex="-1">Ecosystem <a class="header-anchor" href="#ecosystem" aria-hidden="true">#</a></h1><nav class="table-of-contents"><ul><li><a href="#soundworks-core">@soundworks/core</a></li><li><a href="#soundworks-plugin-audio-buffer-loader">@soundworks/plugin-audio-buffer-loader</a></li><li><a href="#soundworks-plugin-checkin">@soundworks/plugin-checkin</a></li><li><a href="#soundworks-plugin-filesystem">@soundworks/plugin-filesystem</a></li><li><a href="#soundworks-plugin-logger">@soundworks/plugin-logger</a></li><li><a href="#soundworks-plugin-platform">@soundworks/plugin-platform</a></li><li><a href="#soundworks-plugin-position">@soundworks/plugin-position</a></li><li><a href="#soundworks-plugin-scripting">@soundworks/plugin-scripting</a></li><li><a href="#soundworks-plugin-sync">@soundworks/plugin-sync</a></li><li><a href="#soundworks-template">@soundworks-template</a></li><li><a href="#soundworks-template-build">@soundworks/template-build</a></li><li><a href="#soundworks-template-helpers">@soundworks/template-helpers</a></li></ul></nav><h2 id="soundworks-core" tabindex="-1"><code>@soundworks/core</code> <a class="header-anchor" href="#soundworks-core" aria-hidden="true">#</a></h2><p>The core of the framework is principally dedicated to:</p><ul><li>WebSocket communications</li><li>Distributed state management</li><li>Plugin hosting</li></ul><div class="tip custom-block"><p class="custom-block-title">Note</p><p>Most of the time you won&#39;t need to install <code>soundworks</code> manually, as the application template already takes care of that.</p></div><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki"><code><span class="line"><span style="color:#F8F8F2;">npm install --save @soundworks/core</span></span>
<span class="line"></span></code></pre></div><p><a href="http://collective-soundworks.github.io/soundworks/" target="_blank" rel="noreferrer"><strong>\u2192 documentation</strong></a><br><a href="https://github.com/collective-soundworks/soundworks" target="_blank" rel="noreferrer"><strong>\u2192 github</strong></a><br><a href="https://www.npmjs.com/package/@soundworks/core" target="_blank" rel="noreferrer"><strong>\u2192 npm</strong></a></p><p><code>soundworks/core</code> functionalities can be extended by installing plugins. Here is a list of available plugins so far:</p><h2 id="soundworks-plugin-audio-buffer-loader" tabindex="-1"><code>@soundworks/plugin-audio-buffer-loader</code> <a class="header-anchor" href="#soundworks-plugin-audio-buffer-loader" aria-hidden="true">#</a></h2><p><em><code>soundworks</code> plugin for loading and managing audio buffers and related JSON data. Currently limited to <code>.mp3</code>, <code>.wav</code> or <code>.json</code> formats to enforce browser compatibility and support (meaning support for Safari...)</em></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki"><code><span class="line"><span style="color:#F8F8F2;">npm install @soundworks/plugin-audio-buffer-loader --save </span></span>
<span class="line"></span></code></pre></div><p><a href="https://github.com/collective-soundworks/soundworks-plugin-audio-buffer-loader" target="_blank" rel="noreferrer"><strong>\u2192 github</strong></a><br><a href="https://www.npmjs.com/package/@soundworks/plugin-audio-buffer-loader" target="_blank" rel="noreferrer"><strong>\u2192 npm</strong></a><br><a href="https://github.com/collective-soundworks/soundworks-examples/tree/master/plugin-audio-buffer-loader" target="_blank" rel="noreferrer"><strong>\u2192 example</strong></a><br><a href="https://github.com/collective-soundworks/soundworks-examples/tree/master/plugin-audio-buffer-loader-and-filesystem" target="_blank" rel="noreferrer"><strong>\u2192 example (w/ filesystem)</strong></a></p><h2 id="soundworks-plugin-checkin" tabindex="-1"><code>@soundworks/plugin-checkin</code> <a class="header-anchor" href="#soundworks-plugin-checkin" aria-hidden="true">#</a></h2><p><em><code>soundworks</code> plugin for assigning a ticket (unique index) to the client among the available ones. The number of available tickets can be limited and tickets can be associated with additional data.</em></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki"><code><span class="line"><span style="color:#F8F8F2;">npm install @soundworks/plugin-checkin --save </span></span>
<span class="line"></span></code></pre></div><p><a href="https://github.com/collective-soundworks/soundworks-plugin-checkin" target="_blank" rel="noreferrer"><strong>\u2192 github</strong></a><br><a href="https://www.npmjs.com/package/@soundworks/plugin-checkin" target="_blank" rel="noreferrer"><strong>\u2192 npm</strong></a><br><a href="https://github.com/collective-soundworks/soundworks-examples/tree/master/plugin-checkin" target="_blank" rel="noreferrer"><strong>\u2192 example</strong></a></p><h2 id="soundworks-plugin-filesystem" tabindex="-1"><code>@soundworks/plugin-filesystem</code> <a class="header-anchor" href="#soundworks-plugin-filesystem" aria-hidden="true">#</a></h2><p><em><code>soundworks</code> plugin to parse and watch directories and distribute their content to all clients in real-time.</em></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki"><code><span class="line"><span style="color:#F8F8F2;">npm install @soundworks/plugin-filesystem --save </span></span>
<span class="line"></span></code></pre></div><p><a href="https://github.com/collective-soundworks/soundworks-plugin-filesystem" target="_blank" rel="noreferrer"><strong>\u2192 github</strong></a><br><a href="https://www.npmjs.com/package/@soundworks/plugin-filesystem" target="_blank" rel="noreferrer"><strong>\u2192 npm</strong></a><br><a href="https://github.com/collective-soundworks/soundworks-examples/tree/master/plugin-filesystem" target="_blank" rel="noreferrer"><strong>\u2192 example</strong></a></p><h2 id="soundworks-plugin-logger" tabindex="-1"><code>@soundworks/plugin-logger</code> <a class="header-anchor" href="#soundworks-plugin-logger" aria-hidden="true">#</a></h2><p><em><code>soundworks</code> plugin dedicated to recording arbitrarily from any node of the network into plain old files.</em></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki"><code><span class="line"><span style="color:#F8F8F2;">npm install @soundworks/plugin-logger --save </span></span>
<span class="line"></span></code></pre></div><p><a href="https://github.com/collective-soundworks/soundworks-plugin-logger" target="_blank" rel="noreferrer"><strong>\u2192 github</strong></a><br><a href="https://www.npmjs.com/package/@soundworks/plugin-logger" target="_blank" rel="noreferrer"><strong>\u2192 npm</strong></a><br><a href="https://github.com/collective-soundworks/soundworks-examples/tree/master/plugin-logger" target="_blank" rel="noreferrer"><strong>\u2192 example</strong></a></p><h2 id="soundworks-plugin-platform" tabindex="-1"><code>@soundworks/plugin-platform</code> <a class="header-anchor" href="#soundworks-plugin-platform" aria-hidden="true">#</a></h2><p><em><code>soundworks</code> plugin that checks the availability of features required by the application, and their initialisation. It also provides an entry point for features that may require a user gesture (e.g. clicking on the screen to resume an audio context). The plugin can also be used to simply add a splash screen to the application.</em></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki"><code><span class="line"><span style="color:#F8F8F2;">npm install @soundworks/plugin-platform --save </span></span>
<span class="line"></span></code></pre></div><p><a href="https://github.com/collective-soundworks/soundworks-plugin-platform" target="_blank" rel="noreferrer"><strong>\u2192 github</strong></a><br><a href="https://www.npmjs.com/package/@soundworks/plugin-platform" target="_blank" rel="noreferrer"><strong>\u2192 npm</strong></a><br><a href="https://github.com/collective-soundworks/soundworks-examples/tree/master/plugin-platform" target="_blank" rel="noreferrer"><strong>\u2192 example</strong></a><br><a href="https://github.com/collective-soundworks/soundworks-examples/tree/master/plugin-platform-devicemotion" target="_blank" rel="noreferrer"><strong>\u2192 example (w/ devicemotion)</strong></a></p><h2 id="soundworks-plugin-position" tabindex="-1"><code>@soundworks/plugin-position</code> <a class="header-anchor" href="#soundworks-plugin-position" aria-hidden="true">#</a></h2><p><em><code>soundworks</code> plugin for locating people in an area. In the <code>soundworks-template</code> default views, the plugin is associated with an initialization screen where people are asked to provide their position on a map.</em></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki"><code><span class="line"><span style="color:#F8F8F2;">npm install @soundworks/plugin-position --save </span></span>
<span class="line"></span></code></pre></div><p><a href="https://github.com/collective-soundworks/soundworks-plugin-position" target="_blank" rel="noreferrer"><strong>\u2192 github</strong></a><br><a href="https://www.npmjs.com/package/@soundworks/plugin-position" target="_blank" rel="noreferrer"><strong>\u2192 npm</strong></a><br><a href="https://github.com/collective-soundworks/soundworks-examples/tree/master/plugin-position" target="_blank" rel="noreferrer"><strong>\u2192 example</strong></a></p><h2 id="soundworks-plugin-scripting" tabindex="-1"><code>@soundworks/plugin-scripting</code> <a class="header-anchor" href="#soundworks-plugin-scripting" aria-hidden="true">#</a></h2><p><em><code>soundworks</code> plugin for runtime scripting. The plugin allows to define an entry point of the application that enables the end user to modify the behavior of the distributed application at runtime, following an end-user programming strategy.</em></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki"><code><span class="line"><span style="color:#F8F8F2;">npm install @soundworks/plugin-scripting --save </span></span>
<span class="line"></span></code></pre></div><p><a href="https://github.com/collective-soundworks/soundworks-plugin-scripting" target="_blank" rel="noreferrer"><strong>\u2192 github</strong></a><br><a href="https://www.npmjs.com/package/@soundworks/plugin-scripting" target="_blank" rel="noreferrer"><strong>\u2192 npm</strong></a><br><a href="https://github.com/collective-soundworks/soundworks-examples/tree/master/plugin-scripting" target="_blank" rel="noreferrer"><strong>\u2192 example</strong></a></p><h2 id="soundworks-plugin-sync" tabindex="-1"><code>@soundworks/plugin-sync</code> <a class="header-anchor" href="#soundworks-plugin-sync" aria-hidden="true">#</a></h2><p><em><code>soundworks</code> plugin for synchronizing arbitrary clocks across devices. The plugin is basically a wrapper around the <a href="https://github.com/collective-soundworks/sync" target="_blank" rel="noreferrer">@ircam/sync</a> library.</em></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki"><code><span class="line"><span style="color:#F8F8F2;">npm install @soundworks/plugin-sync --save </span></span>
<span class="line"></span></code></pre></div><p><a href="https://github.com/collective-soundworks/soundworks-plugin-sync" target="_blank" rel="noreferrer"><strong>\u2192 github</strong></a><br><a href="https://www.npmjs.com/package/@soundworks/plugin-sync" target="_blank" rel="noreferrer"><strong>\u2192 npm</strong></a><br><a href="https://github.com/collective-soundworks/soundworks-examples/tree/master/plugin-sync" target="_blank" rel="noreferrer"><strong>\u2192 example</strong></a></p><h2 id="soundworks-template" tabindex="-1"><code>@soundworks-template</code> <a class="header-anchor" href="#soundworks-template" aria-hidden="true">#</a></h2><p><em>Project template for developing <code>soundworks</code> applications. The template provides a clean code base to start developing an application.</em></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki"><code><span class="line"><span style="color:#F8F8F2;">git clone https://github.com/collective-soundworks/soundworks-template.git my-application</span></span>
<span class="line"><span style="color:#66D9EF;">cd</span><span style="color:#F8F8F2;"> my-application</span></span>
<span class="line"><span style="color:#F8F8F2;">rm -Rf .git</span></span>
<span class="line"><span style="color:#F8F8F2;">npm install</span></span>
<span class="line"><span style="color:#F8F8F2;">npm run dev</span></span>
<span class="line"></span></code></pre></div><p><a href="https://github.com/collective-soundworks/soundworks-template" target="_blank" rel="noreferrer"><strong>\u2192 github</strong></a></p><p>Additionally to the <code>@soundworks/core</code> package, the template installs and uses the <code>@soundworks/template-build</code> and <code>@soundworks/template-helpers</code> to simplify a set of common tasks.</p><h2 id="soundworks-template-build" tabindex="-1"><code>@soundworks/template-build</code> <a class="header-anchor" href="#soundworks-template-build" aria-hidden="true">#</a></h2><p><em>Build scripts of the <code>soundworks-template</code></em></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki"><code><span class="line"><span style="color:#F8F8F2;">npm install --save @soundworks/template-build</span></span>
<span class="line"></span></code></pre></div><p><a href="https://github.com/collective-soundworks/soundworks-template-build" target="_blank" rel="noreferrer"><strong>\u2192 github</strong></a><br><a href="https://www.npmjs.com/package/@soundworks/template-build" target="_blank" rel="noreferrer"><strong>\u2192 npm</strong></a></p><h2 id="soundworks-template-helpers" tabindex="-1"><code>@soundworks/template-helpers</code> <a class="header-anchor" href="#soundworks-template-helpers" aria-hidden="true">#</a></h2><p><em>Set of common helpers (init views, etc.) for applications based on the <code>soundworks-template</code></em></p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki"><code><span class="line"><span style="color:#F8F8F2;">npm install --save @soundworks/template-helpers</span></span>
<span class="line"></span></code></pre></div><p><a href="https://github.com/collective-soundworks/soundworks-template-build" target="_blank" rel="noreferrer"><strong>\u2192 github</strong></a><br><a href="https://www.npmjs.com/package/@soundworks/template-build" target="_blank" rel="noreferrer"><strong>\u2192 npm</strong></a></p>`,54),t=[a];function l(i,p,d,c,u,g){return o(),s("div",null,t)}const m=e(r,[["render",l]]);export{k as __pageData,m as default};
