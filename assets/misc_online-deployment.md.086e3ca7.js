import{_ as s,o as n,c as a,V as o}from"./chunks/framework.7cbf217e.js";const u=JSON.parse('{"title":"Deploying on the Internets","description":"","frontmatter":{},"headers":[],"relativePath":"misc/online-deployment.md","filePath":"misc/online-deployment.md"}'),e={name:"misc/online-deployment.md"},p=o(`<h1 id="deploying-on-the-internets" tabindex="-1">Deploying on the Internets <a class="header-anchor" href="#deploying-on-the-internets" aria-label="Permalink to &quot;Deploying on the Internets&quot;">​</a></h1><p>If you want want to deploy a single application on a single server, there is no particular complexity as the only thing you will have to do is to start the server on the port 80 for <code>http</code> or port 443 for <code>https</code>.</p><p>However, a more common situation is the need deploy several applications on the same server. Generally this is done by having a proxy server (<code>Nginx</code> or <code>Apache</code>) that handle the requests (and possibly the <code>https</code> certificates) and internally route the requests the proper <code>Node.js</code> / <code>soundworks</code> server.</p><p>In the remaining of this page we assume your domain is <code>http(s)://my-domain.com</code> and that you want to run an application behind the path <code>my-app</code>, so that the default soundworks client should be accessible at <code>http(s)://my-domain.com/my-app</code></p><h2 id="application-configure" tabindex="-1">Application Configure <a class="header-anchor" href="#application-configure" aria-label="Permalink to &quot;Application Configure&quot;">​</a></h2><p>The first thing to do is to create a new <code>env</code> config file (e.g. <code>config/env/prod.json</code>) that will contain your production informations:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;">// cf. config/env/prod.json</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// you are in a production environement</span></span>
<span class="line"><span style="color:#F8F8F2;">  type: </span><span style="color:#E6DB74;">&#39;production&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// the soundworks server will listen to the port 8002</span></span>
<span class="line"><span style="color:#F8F8F2;">  port: </span><span style="color:#AE81FF;">8002</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// the application will be accessible at the subpath \`my-app\`</span></span>
<span class="line"><span style="color:#F8F8F2;">  subpath: </span><span style="color:#E6DB74;">&#39;my-app&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// no need to use https as this will be handled by the proxy server</span></span>
<span class="line"><span style="color:#F8F8F2;">  useHttps: </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre></div><p>Then, simply launch the <code>soundworks</code> application using this config file:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F8F8F2;">ENV</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">prod</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">node</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">./.build/server/index.js</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>An interesting free tool to deploy and monitor several applications is <a href="https://pm2.keymetrics.io/" target="_blank" rel="noreferrer"><code>pm2</code></a></p></div><h2 id="nginx-config" tabindex="-1">Nginx Config <a class="header-anchor" href="#nginx-config" aria-label="Permalink to &quot;Nginx Config&quot;">​</a></h2><p>The <code>nginx</code> proxy server will need to be configured so that it route all request to <code>/my-app/*</code> to the port <code>8002</code></p><p>This is done simply by adding a new <code>location</code> configuration in the nginx config file (generally located at <code>/etc/nginx/nginx.conf</code>), such as:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;">// cf. /etc/nginx/nginx.conf</span></span>
<span class="line"><span style="color:#F8F8F2;">http {</span></span>
<span class="line"><span style="color:#F8F8F2;">  # need </span><span style="color:#FD971F;">this</span><span style="color:#F8F8F2;"> map</span></span>
<span class="line"><span style="color:#F8F8F2;">  map $http_upgrade $connection_upgrade {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#F92672;">default</span><span style="color:#F8F8F2;"> upgrade;</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;"> close;</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  server {</span></span>
<span class="line"><span style="color:#F8F8F2;">    listen </span><span style="color:#AE81FF;">80</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    # listen </span><span style="color:#AE81FF;">443</span><span style="color:#F8F8F2;">; # for https</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    # location that internaly redirects all requests to </span></span>
<span class="line"><span style="color:#F8F8F2;">    # </span><span style="color:#E6DB74;">\`/my-app/*\`</span><span style="color:#F8F8F2;"> to the port </span><span style="color:#AE81FF;">8002</span></span>
<span class="line"><span style="color:#F8F8F2;">    location </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">my</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">app {</span></span>
<span class="line"><span style="color:#F8F8F2;">      rewrite </span><span style="color:#F92672;">^</span><span style="color:#E6DB74;">/my-app/</span><span style="color:#F92672;">?</span><span style="color:#F8F8F2;">(.</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">)$ </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">$1 break;</span></span>
<span class="line"><span style="color:#F8F8F2;">      proxy_pass http</span><span style="color:#F92672;">:</span><span style="color:#88846F;">//localhost:8002;</span></span>
<span class="line"><span style="color:#F8F8F2;">      proxy_http_version </span><span style="color:#AE81FF;">1.1</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">      proxy_set_header Upgrade $http_upgrade;</span></span>
<span class="line"><span style="color:#F8F8F2;">      proxy_set_header Connection $connection_upgrade;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre></div><p>Then reload the <code>nginx</code> config:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki monokai"><code><span class="line"><span style="color:#A6E22E;">nginx</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">-s</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">reload</span></span></code></pre></div><p>And your application should be accessible on the internets at <code>http(s)://my-domain.com/my-app</code>!</p><h2 id="apache-config" tabindex="-1">Apache Config <a class="header-anchor" href="#apache-config" aria-label="Permalink to &quot;Apache Config&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">@todo</p><p>...</p></div>`,19),l=[p];function t(c,r,i,F,d,y){return n(),a("div",null,l)}const g=s(e,[["render",t]]);export{u as __pageData,g as default};
