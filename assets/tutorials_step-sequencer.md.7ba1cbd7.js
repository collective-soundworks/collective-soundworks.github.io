import{o as a,c as l,k as s,a as o,l as p,Q as n,f as e}from"./chunks/framework.22f5e90d.js";const t="/assets/architecture.0ef77bdd.png",c="/assets/select-plugins.e60d1bb6.png",F="/assets/create-default-client.71f9a758.png",r="/assets/create-thing-client.529240fd.png",i="/assets/controller-interface.dfe4e06a.png",y="/assets/controller-synced.db348175.png",d="/assets/filesystem-assets.31774b3f.png",u=n('<h1 id="building-a-distributed-step-sequencer" tabindex="-1">Building a Distributed Step Sequencer <a class="header-anchor" href="#building-a-distributed-step-sequencer" aria-label="Permalink to &quot;Building a Distributed Step Sequencer&quot;">​</a></h1><p>In this tutorial, we will use the soundworks&#39; <em>sync</em> plugin we just learned to build a more advanced application: a distributed step sequencer.</p><p>The step sequencer will be based on <em>Node.js</em> clients, representing each a track of our step sequencer, i.e. one the kick, one for the snare, etc. and one browser controller client to rule them all:</p><p><img src="'+t+`" alt="architecture"></p><p>Along the way we will use another plugin, the <em>checkin</em> plugin, which allows us to assign a unique index to each clients.</p><h3 id="related-documentation" tabindex="-1">Related documentation <a class="header-anchor" href="#related-documentation" aria-label="Permalink to &quot;Related documentation&quot;">​</a></h3><ul><li><a href="https://github.com/collective-soundworks/soundworks-plugin-sync" target="_blank" rel="noreferrer">@soundworks/plugin-sync</a></li><li><a href="https://github.com/collective-soundworks/soundworks-plugin-checkin" target="_blank" rel="noreferrer">@soundworks/plugin-checkin</a></li><li><a href="https://github.com/ircam-ismm/sc-scheduling" target="_blank" rel="noreferrer">@ircam/sc-scheduling</a></li><li><a href="https://github.com/ircam-ismm/sc-loader" target="_blank" rel="noreferrer">@ircam/sc-loader</a></li></ul><h2 id="scaffolding-application" tabindex="-1">Scaffolding application <a class="header-anchor" href="#scaffolding-application" aria-label="Permalink to &quot;Scaffolding application&quot;">​</a></h2><p>Let&#39;s start with scaffolding our application using the soundworks wizard:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki monokai"><code><span class="line"><span style="color:#66D9EF;">cd</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">path/to/tutorials</span></span>
<span class="line"><span style="color:#A6E22E;">npx</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">@soundworks/create@latest</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">step-sequencer</span></span></code></pre></div><p>When the wizard ask to select the plugin, let&#39;s then select <code>@soundworks/plugin-sync</code> and the <code>@soundworks/plugin-checkin</code> plugins:</p><p><img src="`+c+'" alt="select-plugins"></p><p>And let&#39;s define our default client as a controller:</p><p><img src="'+F+`" alt="create-default-client"></p><p>Once done, let&#39;s go into our <code>step-sequencer</code> directory and install a few more dependencies we will need using <code>npm</code>:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki monokai"><code><span class="line"><span style="color:#66D9EF;">cd</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">step-sequencer</span></span>
<span class="line"><span style="color:#A6E22E;">npm</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">install</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">--save</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">@ircam/sc-scheduling</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">@ircam/sc-loader</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">node-web-audio-api</span></span></code></pre></div><p>Finally, let&#39;s just create our node client, we will name <code>thing</code>:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki monokai"><code><span class="line"><span style="color:#A6E22E;">npx</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">soundworks</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">--create-client</span></span></code></pre></div><p><img src="`+r+`" alt="create-thing-client"></p><p>We can now start our server:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F8F8F2;">npm run dev</span></span></code></pre></div><p>And, in different &quot;Terminal&quot;, emulate 5 thing clients:</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki monokai"><code><span class="line"><span style="color:#66D9EF;">cd</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">path/to/tutorials/step-sequencer</span></span>
<span class="line"><span style="color:#F8F8F2;">EMULATE</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">npm</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">run</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">watch</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">thing</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>To easily get the current directory in &quot;Terminal&quot; you can use the <code>pwd</code> command</p></div><h2 id="defining-the-global-state" tabindex="-1">Defining the global state <a class="header-anchor" href="#defining-the-global-state" aria-label="Permalink to &quot;Defining the global state&quot;">​</a></h2><p>Now that everything is set up, let&#39;s continue with defining the different parameters that describe our application and declare them in a global state.</p><p>Indeed, we will need several parameters to control our step sequencer:</p><ul><li>A variable which will define if our step sequencer is running or not (&quot;start / stop&quot;).</li><li>A timestamp (in synchronized time) associated to the start / stop event to make sure all our clients start at the same exact time.</li><li>A BPM value for our step sequencer.</li><li>A score.</li></ul><p>To keep things simple, we won&#39;t allow to change the BPM while the step sequencer is running. Indeed, having such functionality would imply to also synchronize our BPM change among every clients, which would lead to over complicate this tutorial.</p><p>Let&#39;s thus create a file named <code>global.js</code> in the <code>src/server/schemas</code> directory and translate these information into a schema definition:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;">// src/server/schemas/global.js</span></span>
<span class="line"><span style="color:#F92672;">export</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">default</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  running: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    type: </span><span style="color:#E6DB74;">&#39;boolean&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    default: </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  startTime: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    type: </span><span style="color:#E6DB74;">&#39;float&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    default: </span><span style="color:#AE81FF;">null</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    nullable: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  BPM: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    type: </span><span style="color:#E6DB74;">&#39;integer&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    default: </span><span style="color:#AE81FF;">120</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">  score: {</span></span>
<span class="line"><span style="color:#F8F8F2;">    type: </span><span style="color:#E6DB74;">&#39;any&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">    default: [],</span></span>
<span class="line"><span style="color:#F8F8F2;">  },</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span></code></pre></div><p>Let&#39;s then register this schema in our server:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai has-diff"><code><span class="line"><span style="color:#88846F;">// src/server/index.js</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { loadConfig } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;../utils/load-config.js&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;../utils/catch-unhandled-errors.js&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line diff add"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> globalSchema </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;./schemas/global.js&#39;</span><span style="color:#F8F8F2;">; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> server </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Server</span><span style="color:#F8F8F2;">(config);</span></span>
<span class="line"><span style="color:#F8F8F2;">server.</span><span style="color:#A6E22E;">useDefaultApplicationTemplate</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line diff add"><span style="color:#F8F8F2;">server.stateManager.</span><span style="color:#A6E22E;">registerSchema</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;global&#39;</span><span style="color:#F8F8F2;">, globalSchema); </span></span></code></pre></div><p>And define some default values for our tracks. Note that we will consider that our step sequencer has 5 different tracks with 8 steps each, and that we will create a branch to initialize our score in debug mode (with some values filled) according to a <code>debug</code> flag to ease the development:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai has-diff"><code><span class="line"><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> server.</span><span style="color:#A6E22E;">start</span><span style="color:#F8F8F2;">();</span></span>
<span class="line diff add"><span style="color:#88846F;">// change this flag to false to empty score by default </span></span>
<span class="line diff add"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> debug </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">; </span></span>
<span class="line diff add"><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> score; </span></span>
<span class="line diff add"><span style="color:#F8F8F2;"> </span></span>
<span class="line diff add"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (debug) { </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// if debug, fill score with default values </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">  score </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [ </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">    [</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">], </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">    [</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">], </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">    [</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">], </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">    [</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">], </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">    [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">], </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">  ]; </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">} </span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> { </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// if not debug, empty score </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">  score </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [ </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">    [</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">], </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">    [</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">], </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">    [</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">], </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">    [</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">], </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">    [</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">], </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">  ]; </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">} </span></span>
<span class="line diff add"><span style="color:#F8F8F2;"> </span></span>
<span class="line diff add"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> global </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> server.stateManager.</span><span style="color:#A6E22E;">create</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;global&#39;</span><span style="color:#F8F8F2;">, { </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">  score, </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">}); </span></span></code></pre></div><h2 id="registering-the-plugins" tabindex="-1">Registering the plugins <a class="header-anchor" href="#registering-the-plugins" aria-label="Permalink to &quot;Registering the plugins&quot;">​</a></h2><p>Now that our state is set up, let&#39;s install and configure our different plugins.</p><p>First let&#39;s register the plugins in the server side:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai has-diff"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@soundworks/helpers/polyfills.js&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Server } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@soundworks/core/server.js&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line diff add"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> pluginSync </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@soundworks/plugin-sync/server.js&#39;</span><span style="color:#F8F8F2;">; </span></span>
<span class="line diff add"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> pluginCheckin </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@soundworks/plugin-checkin/server.js&#39;</span><span style="color:#F8F8F2;">; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { loadConfig } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;../utils/load-config.js&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> server </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Server</span><span style="color:#F8F8F2;">(config);</span></span>
<span class="line"><span style="color:#F8F8F2;">server.</span><span style="color:#A6E22E;">useDefaultApplicationTemplate</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line diff add"><span style="color:#F8F8F2;">server.pluginManager.</span><span style="color:#A6E22E;">register</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;sync&#39;</span><span style="color:#F8F8F2;">, pluginSync); </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">server.pluginManager.</span><span style="color:#A6E22E;">register</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;checkin&#39;</span><span style="color:#F8F8F2;">, pluginCheckin); </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">server.stateManager.</span><span style="color:#A6E22E;">registerSchema</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;global&#39;</span><span style="color:#F8F8F2;">, globalSchema);</span></span></code></pre></div><p>And in our two &quot;controller&quot; and &quot;thing&quot; clients. Note that as we will use the checkin to get a unique index which will allow us to get a track from the score to be played, we will only register the <em>checkin</em> plugin on the &quot;thing&quot; client.</p><p>Let&#39;s start with the &quot;controller&quot;:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai has-diff"><code><span class="line"><span style="color:#88846F;">// src/clients/controller/index.js</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> launcher </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@soundworks/helpers/launcher.js&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line diff add"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> pluginSync </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@soundworks/plugin-sync/client.js&#39;</span><span style="color:#F8F8F2;">; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { html, render } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;lit&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// ...</span></span>
<span class="line"></span>
<span class="line diff add"><span style="color:#F8F8F2;">client.pluginManager.</span><span style="color:#A6E22E;">register</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;sync&#39;</span><span style="color:#F8F8F2;">, pluginSync); </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> client.</span><span style="color:#A6E22E;">start</span><span style="color:#F8F8F2;">();</span></span></code></pre></div><p>Then let&#39;s install our two plugins in our &quot;thing&quot; clients, as you may recall in the last tutorial, in this case we will want to synchronize the audio clock, which will thus require a bit more configuration:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai has-diff"><code><span class="line"><span style="color:#88846F;">// src/clients/thing/index.js</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Client } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@soundworks/core/client.js&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> launcher </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@soundworks/helpers/launcher.js&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line diff add"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> pluginSync </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@soundworks/plugin-sync/client.js&#39;</span><span style="color:#F8F8F2;">; </span></span>
<span class="line diff add"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> pluginCheckin </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@soundworks/plugin-checkin/client.js&#39;</span><span style="color:#F8F8F2;">; </span></span>
<span class="line diff add"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { AudioContext } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;node-web-audio-api&#39;</span><span style="color:#F8F8F2;">; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { loadConfig } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;../../utils/load-config.js&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> client </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Client</span><span style="color:#F8F8F2;">(config);</span></span>
<span class="line diff add"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> audioContext </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">AudioContext</span><span style="color:#F8F8F2;">(); </span></span>
<span class="line diff add"><span style="color:#F8F8F2;"> </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">client.pluginManager.</span><span style="color:#A6E22E;">register</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;checkin&#39;</span><span style="color:#F8F8F2;">, pluginCheckin); </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">client.pluginManager.</span><span style="color:#A6E22E;">register</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;sync&#39;</span><span style="color:#F8F8F2;">, pluginSync, { </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">getTimeFunction</span><span style="color:#F8F8F2;">: () </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> audioContext.currentTime, </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">}); </span></span></code></pre></div><h2 id="implementing-the-controller" tabindex="-1">Implementing the controller <a class="header-anchor" href="#implementing-the-controller" aria-label="Permalink to &quot;Implementing the controller&quot;">​</a></h2><p>Now that everything is set up, it is time to implement our controller logic.</p><p>Let&#39;s first import a few components, attach to our <code>global</code> state and sketch our graphical user interface:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai has-diff"><code><span class="line"><span style="color:#88846F;">// src/clients/controller/index.js</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { html, render } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;lit&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;../components/sw-audit.js&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line diff add"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@ircam/sc-components/sc-matrix.js&#39;</span><span style="color:#F8F8F2;">; </span></span>
<span class="line diff add"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@ircam/sc-components/sc-text.js&#39;</span><span style="color:#F8F8F2;">; </span></span>
<span class="line diff add"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@ircam/sc-components/sc-transport.js&#39;</span><span style="color:#F8F8F2;">; </span></span>
<span class="line diff add"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@ircam/sc-components/sc-number.js&#39;</span><span style="color:#F8F8F2;">; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// ... </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> client.</span><span style="color:#A6E22E;">start</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line diff add"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> global </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> client.stateManager.</span><span style="color:#A6E22E;">attach</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;global&#39;</span><span style="color:#F8F8F2;">); </span></span>
<span class="line diff add"><span style="color:#88846F;">// update screen on update </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">global.</span><span style="color:#A6E22E;">onUpdate</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">renderApp</span><span style="color:#F8F8F2;">()); </span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">renderApp</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">render</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">html</span><span style="color:#E6DB74;">\`</span></span>
<span class="line"><span style="color:#E6DB74;">    &lt;div class=&quot;controller-layout&quot;&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">      &lt;header&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">        &lt;h1&gt;</span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">client.config.app.name</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;"> | </span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">client.role</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;">&lt;/h1&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">        &lt;sw-audit .client=&quot;</span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">client</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;">&quot;&gt;&lt;/sw-audit&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">      &lt;/header&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">      &lt;section&gt;</span></span>
<span class="line diff remove"><span style="color:#E6DB74;">        &lt;p&gt;Hello </span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">client.config.app.name</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;">!&lt;/p&gt; </span></span>
<span class="line diff add"><span style="color:#E6DB74;">        &lt;div&gt; </span></span>
<span class="line diff add"><span style="color:#E6DB74;">          &lt;div style=&quot;margin-bottom: 4px;&quot;&gt; </span></span>
<span class="line diff add"><span style="color:#E6DB74;">            &lt;sc-transport  </span></span>
<span class="line diff add"><span style="color:#E6DB74;">              .buttons=</span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">[</span><span style="color:#E6DB74;">&#39;play&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;stop&#39;</span><span style="color:#F8F8F2;">]</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;"> </span></span>
<span class="line diff add"><span style="color:#E6DB74;">              value=</span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">global.</span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;running&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">?</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;play&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;stop&#39;</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;"> </span></span>
<span class="line diff add"><span style="color:#E6DB74;">            &gt;&lt;/sc-transport&gt; </span></span>
<span class="line diff add"><span style="color:#E6DB74;">          &lt;/div&gt; </span></span>
<span class="line diff add"><span style="color:#E6DB74;">          &lt;div style=&quot;margin-bottom: 4px;&quot;&gt; </span></span>
<span class="line diff add"><span style="color:#E6DB74;">            &lt;sc-text&gt;BPM&lt;/sc-text&gt; </span></span>
<span class="line diff add"><span style="color:#E6DB74;">            &lt;sc-number </span></span>
<span class="line diff add"><span style="color:#E6DB74;">              min=&quot;50&quot; </span></span>
<span class="line diff add"><span style="color:#E6DB74;">              max=&quot;240&quot; </span></span>
<span class="line diff add"><span style="color:#E6DB74;">              value=</span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">global.</span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;BPM&#39;</span><span style="color:#F8F8F2;">)</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;"> </span></span>
<span class="line diff add"><span style="color:#E6DB74;">            &gt;&lt;/sc-number&gt; </span></span>
<span class="line diff add"><span style="color:#E6DB74;">          &lt;/div&gt; </span></span>
<span class="line diff add"><span style="color:#E6DB74;">          &lt;div style=&quot;margin-bottom: 4px;&quot;&gt; </span></span>
<span class="line diff add"><span style="color:#E6DB74;">            &lt;sc-matrix </span></span>
<span class="line diff add"><span style="color:#E6DB74;">              .value=</span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">global.</span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;score&#39;</span><span style="color:#F8F8F2;">)</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;"> </span></span>
<span class="line diff add"><span style="color:#E6DB74;">            &gt;&lt;/sc-matrix&gt; </span></span>
<span class="line diff add"><span style="color:#E6DB74;">          &lt;/div&gt; </span></span>
<span class="line"><span style="color:#E6DB74;">        &lt;/div&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">      &lt;/section&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">    &lt;/div&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">  \`</span><span style="color:#F8F8F2;">, $container);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre></div><p>If you open your controller in a Web browser, you should now see the following interface:</p><p><img src="`+i+`" alt="controller-interface"></p><p>Now let&#39;s just change a bit our code to propagate the changes made in our interface in the <code>global</code> state:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai has-diff"><code><span class="line"><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> client.</span><span style="color:#A6E22E;">start</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> global </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> client.stateManager.</span><span style="color:#A6E22E;">attach</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;global&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// update screen on update</span></span>
<span class="line"><span style="color:#F8F8F2;">  global.</span><span style="color:#A6E22E;">onUpdate</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">renderApp</span><span style="color:#F8F8F2;">());</span></span>
<span class="line"></span>
<span class="line diff add"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> sync </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> client.pluginManager.</span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;sync&#39;</span><span style="color:#F8F8F2;">); </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">renderApp</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span><span style="color:#A6E22E;">render</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;">html</span><span style="color:#E6DB74;">\`</span></span>
<span class="line"><span style="color:#E6DB74;">      &lt;div class=&quot;controller-layout&quot;&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">        &lt;header&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">          &lt;h1&gt;</span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">client.config.app.name</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;"> | </span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">client.role</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;">&lt;/h1&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">          &lt;sw-audit .client=&quot;</span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">client</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;">&quot;&gt;&lt;/sw-audit&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">        &lt;/header&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">        &lt;section&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">          &lt;div&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">            &lt;div style=&quot;margin-bottom: 4px;&quot;&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">              &lt;sc-transport</span></span>
<span class="line"><span style="color:#E6DB74;">                .buttons=</span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">[</span><span style="color:#E6DB74;">&#39;play&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;stop&#39;</span><span style="color:#F8F8F2;">]</span><span style="color:#F92672;">}</span></span>
<span class="line"><span style="color:#E6DB74;">                value=</span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">global.</span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;running&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">?</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;play&#39;</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">:</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;stop&#39;</span><span style="color:#F92672;">}</span></span>
<span class="line diff add"><span style="color:#E6DB74;">                @change=</span><span style="color:#F92672;">\${</span><span style="color:#FD971F;font-style:italic;">e</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> { </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">                  </span><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> (e.detail.value </span><span style="color:#F92672;">===</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;stop&#39;</span><span style="color:#F8F8F2;">) { </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">                    global.</span><span style="color:#A6E22E;">set</span><span style="color:#F8F8F2;">({ running: </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;"> }); </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">                  } </span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> { </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">                    </span><span style="color:#88846F;">// grab current sync time </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">                    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> syncTime </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> sync.</span><span style="color:#A6E22E;">getSyncTime</span><span style="color:#F8F8F2;">(); </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">                    </span><span style="color:#88846F;">// add an offset to the syncTime to handle network latency </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">                    </span><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> startTime </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> syncTime </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">0.5</span><span style="color:#F8F8F2;">; </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">                    </span><span style="color:#88846F;">// propagate values on the network </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">                    global.</span><span style="color:#A6E22E;">set</span><span style="color:#F8F8F2;">({ running: </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">, startTime }); </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">                  } </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">                }</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;"> </span></span>
<span class="line"><span style="color:#E6DB74;">              &gt;&lt;/sc-transport&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">            &lt;/div&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">            &lt;div style=&quot;margin-bottom: 4px;&quot;&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">              &lt;sc-text&gt;BPM&lt;/sc-text&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">              &lt;sc-number</span></span>
<span class="line"><span style="color:#E6DB74;">                min=&quot;50&quot;</span></span>
<span class="line"><span style="color:#E6DB74;">                max=&quot;240&quot;</span></span>
<span class="line"><span style="color:#E6DB74;">                value=</span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">global.</span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;BPM&#39;</span><span style="color:#F8F8F2;">)</span><span style="color:#F92672;">}</span></span>
<span class="line diff add"><span style="color:#E6DB74;">                ?disabled=</span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">global.</span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;running&#39;</span><span style="color:#F8F8F2;">)</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;"> </span></span>
<span class="line diff add"><span style="color:#E6DB74;">                @change=</span><span style="color:#F92672;">\${</span><span style="color:#FD971F;font-style:italic;">e</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> global.</span><span style="color:#A6E22E;">set</span><span style="color:#F8F8F2;">({ BPM: e.detail.value })</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;"> </span></span>
<span class="line"><span style="color:#E6DB74;">              &gt;&lt;/sc-number&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">            &lt;/div&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">            &lt;div style=&quot;margin-bottom: 4px;&quot;&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">              &lt;sc-matrix</span></span>
<span class="line"><span style="color:#E6DB74;">                .value=</span><span style="color:#F92672;">\${</span><span style="color:#F8F8F2;">global.</span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;score&#39;</span><span style="color:#F8F8F2;">)</span><span style="color:#F92672;">}</span></span>
<span class="line diff add"><span style="color:#E6DB74;">                @change=</span><span style="color:#F92672;">\${</span><span style="color:#FD971F;font-style:italic;">e</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> global.</span><span style="color:#A6E22E;">set</span><span style="color:#F8F8F2;">({ score: e.detail.value })</span><span style="color:#F92672;">}</span><span style="color:#E6DB74;"> </span></span>
<span class="line"><span style="color:#E6DB74;">              &gt;&lt;/sc-matrix&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">            &lt;/div&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">          &lt;/div&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">        &lt;/section&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">      &lt;/div&gt;</span></span>
<span class="line"><span style="color:#E6DB74;">    \`</span><span style="color:#F8F8F2;">, $container);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Note how we disabled the BPM number box when the step sequencer is running:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F92672;">?</span><span style="color:#F8F8F2;">disabled</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">\${global.get(</span><span style="color:#E6DB74;">&#39;running&#39;</span><span style="color:#F8F8F2;">)}</span></span></code></pre></div><p>to make clear to the user that the BPM can be changed only when it is stopped.</p></div><p>If you now open two controllers side by side, e.g. <a href="http://127.0.0.1:8000?emulate=2" target="_blank" rel="noreferrer">http://127.0.0.1:8000?emulate=2</a>, you should see that the two controllers stay perfectly synchronized:</p><p><img src="`+y+'" alt="controller-synced"></p><h2 id="implementing-the-audio-engine" tabindex="-1">Implementing the audio engine <a class="header-anchor" href="#implementing-the-audio-engine" aria-label="Permalink to &quot;Implementing the audio engine&quot;">​</a></h2><p>Now that all our controls are set up, let&#39;s go back to our thing clients to implement the audio engine and logic.</p><h3 id="loading-some-audio-files" tabindex="-1">Loading some audio files <a class="header-anchor" href="#loading-some-audio-files" aria-label="Permalink to &quot;Loading some audio files&quot;">​</a></h3><p>First let&#39;s add a few audio files into our project, that our step sequencer will be able to use for audio rendering. For simplicity, let&#39;s put them in the <code>public</code> directory.</p>',59),f={class:"info custom-block"},g=s("p",{class:"custom-block-title"},"INFO",-1),E=["href"],h=n('<p>Your file system should now look like the following:</p><p><img src="'+d+`" alt="filesystem-assets"></p><p>Now let&#39;s load these file into our thing clients:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai has-diff"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { AudioContext } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;node-web-audio-api&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line diff add"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { AudioBufferLoader } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@ircam/sc-loader&#39;</span><span style="color:#F8F8F2;">; </span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { loadConfig } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;../../utils/load-config.js&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> client.</span><span style="color:#A6E22E;">start</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line diff add"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> audioFiles </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [ </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">  </span><span style="color:#E6DB74;">&#39;public/assets/hh.wav&#39;</span><span style="color:#F8F8F2;">, </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">  </span><span style="color:#E6DB74;">&#39;public/assets/clap.wav&#39;</span><span style="color:#F8F8F2;">, </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">  </span><span style="color:#E6DB74;">&#39;public/assets/rimshot.wav&#39;</span><span style="color:#F8F8F2;">, </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">  </span><span style="color:#E6DB74;">&#39;public/assets/snare.wav&#39;</span><span style="color:#F8F8F2;">, </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">  </span><span style="color:#E6DB74;">&#39;public/assets/kick.wav&#39;</span><span style="color:#F8F8F2;">, </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">]; </span></span>
<span class="line diff add"><span style="color:#F8F8F2;"> </span></span>
<span class="line diff add"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> loader </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">AudioBufferLoader</span><span style="color:#F8F8F2;">(audioContext); </span></span>
<span class="line diff add"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> audioBuffers </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> loader.</span><span style="color:#A6E22E;">load</span><span style="color:#F8F8F2;">(audioFiles); </span></span>
<span class="line diff add"><span style="color:#F8F8F2;"> </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(audioBuffers); </span></span></code></pre></div><p>You should see logged into the console the loaded audio buffers.</p><h3 id="creating-the-synchronized-scheduler" tabindex="-1">Creating the synchronized scheduler <a class="header-anchor" href="#creating-the-synchronized-scheduler" aria-label="Permalink to &quot;Creating the synchronized scheduler&quot;">​</a></h3><p>Then, let&#39;s create a scheduler, running in the synchronized time, i.e. scheduling events in the synchronized timeline, but able to provide us the corresponding time in the <code>audioContext</code> time reference:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai has-diff"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { AudioBufferLoader } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@ircam/sc-loader&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line diff add"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Scheduler } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@ircam/sc-scheduling&#39;</span><span style="color:#F8F8F2;">; </span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { loadConfig } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;../../utils/load-config.js&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> client.</span><span style="color:#A6E22E;">start</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line diff add"><span style="color:#88846F;">// retrieve initialized sync plugin </span></span>
<span class="line diff add"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> sync </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> client.pluginManager.</span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;sync&#39;</span><span style="color:#F8F8F2;">); </span></span>
<span class="line diff add"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> scheduler </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Scheduler</span><span style="color:#F8F8F2;">(() </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> sync.</span><span style="color:#A6E22E;">getSyncTime</span><span style="color:#F8F8F2;">(), { </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// provide the transfert function that will allow the scheduler to map from </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// its current time (the sync time) and the audio time (the sync plugin local time) </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">  </span><span style="color:#A6E22E;">currentTimeToProcessorTimeFunction</span><span style="color:#F8F8F2;">: </span><span style="color:#FD971F;font-style:italic;">syncTime</span><span style="color:#F8F8F2;"> </span><span style="color:#66D9EF;font-style:italic;">=&gt;</span><span style="color:#F8F8F2;"> sync.</span><span style="color:#A6E22E;">getLocalTime</span><span style="color:#F8F8F2;">(syncTime), </span></span>
<span class="line diff add"><span style="color:#F8F8F2;">}); </span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> audioFiles </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span></span>
<span class="line"><span style="color:#F8F8F2;">  </span><span style="color:#88846F;">// ...</span></span>
<span class="line"><span style="color:#F8F8F2;">];</span></span></code></pre></div><h3 id="implementing-the-audio-engine-1" tabindex="-1">Implementing the audio engine <a class="header-anchor" href="#implementing-the-audio-engine-1" aria-label="Permalink to &quot;Implementing the audio engine&quot;">​</a></h3><p>Then implement a simple audio engine that will play a track from the score and an associated buffer according to a given index:</p><h3 id="binding-all-components-with-the-shared-state" tabindex="-1">Binding all components with the shared state <a class="header-anchor" href="#binding-all-components-with-the-shared-state" aria-label="Permalink to &quot;Binding all components with the shared state&quot;">​</a></h3><p>Finally, let&#39;s attach to the <code>global</code> state and create our step sequencer engine which will react to updates of the <code>global</code> state:</p><h2 id="conclusion" tabindex="-1">Conclusion <a class="header-anchor" href="#conclusion" aria-label="Permalink to &quot;Conclusion&quot;">​</a></h2>`,13),w=JSON.parse('{"title":"Building a Distributed Step Sequencer","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/step-sequencer.md","filePath":"tutorials/step-sequencer.md"}'),m={name:"tutorials/step-sequencer.md"},v=Object.assign(m,{setup(D){return(B,b)=>(a(),l("div",null,[u,s("div",f,[g,s("p",null,[o("The set of samples used in the tutorial can be downloaded "),s("a",{href:p(e)("/static-assets/step-sequencer-samples.zip")},"here",8,E)])]),h]))}});export{w as __pageData,v as default};
