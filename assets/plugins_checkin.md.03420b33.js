import{_ as n,o as e,c as a,Q as s}from"./chunks/framework.a5027060.js";const g=JSON.parse('{"title":"soundworks | plugin checkin","description":"","frontmatter":{},"headers":[],"relativePath":"plugins/checkin.md","filePath":"plugins/checkin.md"}'),l={name:"plugins/checkin.md"},o=s(`<h1 id="soundworks-plugin-checkin" tabindex="-1">soundworks | plugin checkin <a class="header-anchor" href="#soundworks-plugin-checkin" aria-label="Permalink to &quot;soundworks | plugin checkin&quot;">​</a></h1><p><a href="https://badge.fury.io/js/@soundworks%2Fplugin-checkin" target="_blank" rel="noreferrer"><img src="https://badge.fury.io/js/@soundworks%2Fplugin-checkin.svg" alt="npm version"></a></p><p><a href="https://soundworks.dev" target="_blank" rel="noreferrer"><code>soundworks</code></a> plugin to assign a unique index to the clients among the available ones.</p><p>When a client disconnects, it&#39;s index is recycled into the pool of available indexes and can be re-assigned to a newly connected client. The number of available indexes can be limited and can be associated to additional data.</p><h2 id="table-of-contents" tabindex="-1">Table of Contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of Contents&quot;">​</a></h2><ul><li><a href="#installation">Installation</a></li><li><a href="#usage">Usage</a><ul><li><a href="#server">Server</a></li><li><a href="#client">Client</a></li></ul></li><li><a href="#api">API</a><ul><li><a href="#classes">Classes</a></li><li><a href="#plugincheckinclient">PluginCheckinClient</a></li><li><a href="#plugincheckinserver">PluginCheckinServer</a></li></ul></li><li><a href="#credits">Credits</a></li><li><a href="#license">License</a></li></ul><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki monokai"><code><span class="line"><span style="color:#A6E22E;">npm</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">install</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">@soundworks/plugin-checkin</span><span style="color:#F8F8F2;"> </span><span style="color:#AE81FF;">--save</span></span></code></pre></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><h3 id="server" tabindex="-1">Server <a class="header-anchor" href="#server" aria-label="Permalink to &quot;Server&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;">// index.js</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Server } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@soundworks/core/server.js&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> pluginCheckin </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@soundworks/plugin-checkin/server.js&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> server </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Server</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">server.pluginManager.</span><span style="color:#A6E22E;">register</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;checkin&#39;</span><span style="color:#F8F8F2;">, pluginCheckin);</span></span></code></pre></div><h3 id="client" tabindex="-1">Client <a class="header-anchor" href="#client" aria-label="Permalink to &quot;Client&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai"><code><span class="line"><span style="color:#88846F;">// index.js</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> { Client } </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@soundworks/core/client.js&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> pluginCheckin </span><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> </span><span style="color:#E6DB74;">&#39;@soundworks/plugin-checkin/client.js&#39;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> client </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">new</span><span style="color:#F8F8F2;"> </span><span style="color:#A6E22E;">Client</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">client.pluginManager.</span><span style="color:#A6E22E;">register</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;checkin&#39;</span><span style="color:#F8F8F2;">, pluginCheckin);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> client.</span><span style="color:#A6E22E;">start</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> checkin </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> </span><span style="color:#F92672;">await</span><span style="color:#F8F8F2;"> client.pluginManager.</span><span style="color:#A6E22E;">get</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;checkin&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">const</span><span style="color:#F8F8F2;"> index </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> checkin.</span><span style="color:#A6E22E;">getIndex</span><span style="color:#F8F8F2;">();</span></span></code></pre></div><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="classes" tabindex="-1">Classes <a class="header-anchor" href="#classes" aria-label="Permalink to &quot;Classes&quot;">​</a></h3><dl><dt><a href="#PluginCheckinClient">PluginCheckinClient</a></dt><dd><p>Client-side representation of the soundworks&#39; checkin plugin.</p></dd><dt><a href="#PluginCheckinServer">PluginCheckinServer</a></dt><dd><p>Server-side representation of the soundworks&#39; checkin plugin.</p></dd></dl><p><a name="PluginCheckinClient"></a></p><h3 id="plugincheckinclient" tabindex="-1">PluginCheckinClient <a class="header-anchor" href="#plugincheckinclient" aria-label="Permalink to &quot;PluginCheckinClient&quot;">​</a></h3><p>Client-side representation of the soundworks&#39; checkin plugin.</p><p><strong>Kind</strong>: global class</p><ul><li><a href="#PluginCheckinClient">PluginCheckinClient</a><ul><li><a href="#PluginCheckinClient+getIndex">.getIndex()</a> ⇒ <code>number</code></li><li><a href="#PluginCheckinClient+getData">.getData()</a> ⇒ <code>mixed</code></li></ul></li></ul><p><a name="PluginCheckinClient+getIndex"></a></p><h4 id="plugincheckinclient-getindex-⇒-number" tabindex="-1">pluginCheckinClient.getIndex() ⇒ <code>number</code> <a class="header-anchor" href="#plugincheckinclient-getindex-⇒-number" aria-label="Permalink to &quot;pluginCheckinClient.getIndex() ⇒ &lt;code&gt;number&lt;/code&gt;&quot;">​</a></h4><p>Return the unique index given to the client</p><p><strong>Kind</strong>: instance method of <a href="#PluginCheckinClient"><code>PluginCheckinClient</code></a><br><a name="PluginCheckinClient+getData"></a></p><h4 id="plugincheckinclient-getdata-⇒-mixed" tabindex="-1">pluginCheckinClient.getData() ⇒ <code>mixed</code> <a class="header-anchor" href="#plugincheckinclient-getdata-⇒-mixed" aria-label="Permalink to &quot;pluginCheckinClient.getData() ⇒ &lt;code&gt;mixed&lt;/code&gt;&quot;">​</a></h4><p>Return the associated data given to the client (if any)</p><p><strong>Kind</strong>: instance method of <a href="#PluginCheckinClient"><code>PluginCheckinClient</code></a><br><a name="PluginCheckinServer"></a></p><h3 id="plugincheckinserver" tabindex="-1">PluginCheckinServer <a class="header-anchor" href="#plugincheckinserver" aria-label="Permalink to &quot;PluginCheckinServer&quot;">​</a></h3><p>Server-side representation of the soundworks&#39; checkin plugin.</p><p><strong>Kind</strong>: global class<br><a name="new_PluginCheckinServer_new"></a></p><h4 id="new-plugincheckinserver" tabindex="-1">new PluginCheckinServer() <a class="header-anchor" href="#new-plugincheckinserver" aria-label="Permalink to &quot;new PluginCheckinServer()&quot;">​</a></h4><p>The constructor should never be called manually. The plugin will be instantiated by soundworks when registered in the <code>pluginManager</code></p><p>Available options:</p><ul><li><code>capacity</code> {number} [Infinity] - Number of available indexes</li><li><code>data</code> {array} - optionnal data associated to a given index.</li></ul><p><strong>Example</strong></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki monokai"><code><span class="line"><span style="color:#F8F8F2;">server.pluginManager.</span><span style="color:#A6E22E;">register</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;checkin&#39;</span><span style="color:#F8F8F2;">, pluginCheckin, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  capacity: </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  data: [{ color: </span><span style="color:#E6DB74;">&#39;green&#39;</span><span style="color:#F8F8F2;"> }, { color: </span><span style="color:#E6DB74;">&#39;yellow&#39;</span><span style="color:#F8F8F2;"> }, { color: </span><span style="color:#E6DB74;">&#39;pink&#39;</span><span style="color:#F8F8F2;"> }],</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span></code></pre></div><h2 id="credits" tabindex="-1">Credits <a class="header-anchor" href="#credits" aria-label="Permalink to &quot;Credits&quot;">​</a></h2><p><a href="https://soundworks.dev/credits.html" target="_blank" rel="noreferrer">https://soundworks.dev/credits.html</a></p><h2 id="license" tabindex="-1">License <a class="header-anchor" href="#license" aria-label="Permalink to &quot;License&quot;">​</a></h2><p><a href="./LICENSE.html">BSD-3-Clause</a></p>`,41),i=[o];function t(c,r,p,d,h,F){return e(),a("div",null,i)}const k=n(l,[["render",t]]);export{g as __pageData,k as default};
